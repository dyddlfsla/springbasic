
 ◆ BeanFactory 와 ApplicationContext

  BeanFactory 는 스프링 컨테이너의 최상위 인터페이스다.
  스프링 Bean 을 관리하고 조회하는 역할을 담당한다.
  getBean() 메서드를 담당한다.
  ApplicationContext 가 가지고 있는 대부분의 메서드들은 해당 인터페이스로부터 물려받은 것들이다.

  ApplicationContext 는 BeanFactory 기능을 모두 상속받아서 제공한다.
  bean 을 관리하고 검색하는 기능을 이미 BeanFactory 에서 제공하고 있는데 그렇다면 이 둘의 차이점은 무엇일까?
  일반적으로, 애플리케이션을 개발할 때에는 Bean 을 관리하고 조회하는 기능은 물론이고 그 이상의 수 많은 부가 기능들이 필요하고
  ApplicationContext 는 BeanFactory 와 달리 이런 부가 기능까지 다 포함한 클래스인 것이다.

  ApplicationContext 에 담긴 부가기능
  1) 메세지 소스를 활용한 국제화 기능: 다양한 국가들의 언어를 지원함
  2) 환경변수 설정: 로컬, 개발, 운영 등 각각의 환경을 구분해서 처리
  3) 애플리케이션 이벤트: 이벤트를 발행하고 구독하는 모델들을 쉽게 적용할 수 있음
  4) 쉬운 리소스 조회: 파일, 클래스 패스 등 외부에서 리소스를 간편하게 조회할 수 있음

  • ApplicationContext 는 BeanFactory 의 기능을 상속 받는다.
  • ApplicationContext 는 Bean 관리 기능 + 편리한 추가 기능을 제공한다.
  • BeanFactory 를 직접 사용할 일은 거의 없다.
  • BeanFactory 나 ApplicationContext 모두 스프링 컨테이너이다.
